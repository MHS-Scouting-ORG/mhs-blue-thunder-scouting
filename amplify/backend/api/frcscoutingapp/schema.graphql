# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

###############
### SCORING ###
###############

# enums

# types
type TeleScoring {
  Amp: Int
  Speaker: Int
  AmplifiedSpeaker: Int
  Cycles: Int
}

type TelePointsScoring {
  Points: Int
  EndgamePoints: Int
  SpeakerPoints: Int
  AmpPoints: Int
}

##################
### AUTONOMOUS ###
##################

# enums
type AutoScoring {
  Amp: Int
  Speaker: Int
}

type AutoPointsScoring {
  Points: Int
  SpeakerPoints: Int
  AmpPoints: Int
}

# types
type AutonomousType {
  StartingPosition: Int!
  AmountScored: AutoScoring
  PointsScored: AutoPointsScoring
  Left: Boolean
}

##############
### TELEOP ###
##############

# enums
enum StageOpts {
  Onstage
  Attempted
  Parked
  None
}

enum StagePositionOpts {
  Left
  Right
  Center
  None
}

enum MatchResultOpts {
  Win
  Tie
  Loss
}

# types

type PenaltyOpts {
  YellowCard: Boolean
  RedCard: Boolean
  Disabled: Boolean
  DQ: Boolean
  Broken: Boolean
  NoShow: Boolean
}

type HumPlrScoringType {
  Made: Int
  Missed: Int
}

type EndgameType {
  MatchResult: MatchResultOpts
  StageResult: StageOpts
  TrapScored: Boolean
  Melody: Boolean
  Ensemble: Boolean
}

type TeleopType {
  AmountScored: TeleScoring
  PointsScored: TelePointsScoring
  Endgame: EndgameType
  HumPlrScoring: HumPlrScoringType
}

type PenaltyType {
  Fouls: Int
  Tech: Int
  PenaltiesCommitted: PenaltyOpts
  FoulDesc: String
}

##################
### ROBOT INFO ###
##################

# enums
enum SpeedOpts {
  None
  Slow
  Average
  Fast
}

enum RatingOpts {
  None
  Bad
  Average
  Good
}

# types

type RobotInfoType {
  AmpRating: String
  SpeakerRating: String
  TrapRating: String
  HangRating: String
  IntakeRating: String
  LineupSpeed: String
  RobotSpeed: String
  PassesUnderStage: Boolean
  CountersDefense: Boolean
  CanDefend: Boolean
  WhatBrokeDesc: String
}

#################
### TEAM INFO ###
#################

# enums

# types

type Team @model @auth(rules : [{ allow: private, provider: iam}]) {
  id: ID! @primaryKey
  name: String!
  description: String
  Comment: String
}

type TeamMatch @model @auth(rules : [{ allow: private, provider: iam}]) {
  id: ID! @primaryKey(sortKeyFields: ["Regional","Team"])
  name: String
  description: String
  Team: ID! @index
  Regional: String! @index
  TotalPoints: Int
  Autonomous: AutonomousType!
  Teleop: TeleopType!
  Comments: String
  RobotInfo: RobotInfoType!
  Penalties: PenaltyType
}