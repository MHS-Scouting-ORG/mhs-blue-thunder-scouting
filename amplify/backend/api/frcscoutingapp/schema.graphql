# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

###############
### SCORING ###
###############

# enums

# types
type TeleScoring {
  CoralL1: Int
  CoralL2: Int
  CoralL3: Int
  CoralL4: Int
  Processor: Int
  Net: Int
  Cycles: Int
  CoralL1Missed: Int
  CoralL2Missed: Int
  CoralL3Missed: Int
  CoralL4Missed: Int
  ProcessorMissed: Int
  NetMissed: Int
}

type TelePointsScoring {
  Points: Int
  EndgamePoints: Int
  CoralPoints: Int
  AlgaePoints: Int
}

##################
### AUTONOMOUS ###
##################

# enums
type AutoScoring {
  CoralL1: Int
  CoralL2: Int
  CoralL3: Int
  CoralL4: Int
  Processor: Int
  Net: Int
}

type AutoPointsScoring {
  Points: Int
  CoralPoints: Int
  AlgaePoints: Int
}

# types
type AutonomousType {
  StartingPosition: Int!
  AmountScored: AutoScoring
  PointsScored: AutoPointsScoring
  Left: Boolean
}

##############
### TELEOP ###
##############

# enums

enum EndgameOpts {
  Deep
  Shallow
  Parked
  None
}

# types

type PenaltyOpts {
  YellowCard: Boolean
  RedCard: Boolean
  Disabled: Boolean
  DQ: Boolean
  Broken: Boolean
  NoShow: Boolean
}

type HumPlrScoringType {
  Made: Int
  Missed: Int
}

type EndgameType {
  EndGameResult: EndgameOpts
}

type TeleopType {
  AmountScored: TeleScoring
  PointsScored: TelePointsScoring
  Endgame: EndgameType
  HumPlrScoring: HumPlrScoringType
}

type PenaltyType {
  Fouls: Int
  Tech: Int
  PenaltiesCommitted: PenaltyOpts
  FoulDesc: String
}

##################
### ROBOT INFO ###
##################

# enums
enum SpeedOpts {
  None
  Slow
  Average
  Fast
}

# types

type RobotInfoType {
  RobotSpeed: SpeedOpts
  WhatBrokeDesc: String
  Comments: String
}

#################
### TEAM INFO ###
#################

# types

type Team @model @auth(rules : [{ allow: private, provider: iam}]) {
  id: ID! @primaryKey
  name: String!
  description: String
  Comment: String
}

type TeamMatch @model @auth(rules : [{ allow: private, provider: iam}]) {
  id: ID! @primaryKey(sortKeyFields: ["Regional","Team"])
  name: String
  description: String
  Team: ID! @index
  Regional: String! @index
  TotalPoints: Int
  Autonomous: AutonomousType!
  Teleop: TeleopType!
  RobotInfo: RobotInfoType!
  Penalties: PenaltyType
}